import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useEffect, useState } from 'react';
import { ethers } from 'ethers';
import ABI from '../utils/WavePortal.json';

export default function Home() {
	// Just a state variable we use to store our user's public wallet address
	const [currAccount, setCurrentAccount] = useState('');
	const contractAddress = '0x72A1DA3D8E71449Bd1AB86838884922026DcA1bf';
	const contractABI = ABI.abi;
	const [countWaves, setCountWaves] = useState(0);

	const checkIfWalletIsConnected = () => {
		// First make sure we have access to window.ethereum
		const { ethereum } = window;
		if (!ethereum) {
			console.log(
				'Make sure you have MetaMask installed and logged in to your browser'
			);
			return;
		} else {
			// Now check if we are connected to the ethereum network
			console.log('We have the ethereum object', ethereum);
		}
		// Check if we are authorized to access the user's wallet
		ethereum.request({ method: 'eth_accounts' }).then((accounts) => {
			// We could have multiple accounts. Check for one.
			if (accounts.length !== 0) {
				// Grab the first account we have access to.
				const account = accounts[0];
				console.log('Found an authorized account: ', account);

				// Store the users public wallet address for later!
				setCurrentAccount(account);
			} else {
				console.log('No authorized accounts found');
			}
		});
	};

	const connectWallet = () => {
		const { ethereum } = window;
		if (!ethereum) {
			alert('Get metamask!');
		}
		ethereum
			.request({ method: 'eth_requestAccounts' })
			.then((accounts) => {
				console.log('Connected', accounts[0]);
				setCurrentAccount(accounts[0]);
			})
			.catch((err) => {
				console.log('Error', err);
			});
	};

	const wave = async () => {
		const provider = new ethers.providers.Web3Provider(window.ethereum);
		const signer = provider.getSigner();
		const wavePortalContract = new ethers.Contract(
			contractAddress,
			contractABI,
			signer
		);

		let count = await wavePortalContract.getTotalWaves();
		console.log('Retreived total wave count...', count.toNumber());

		const waveTxn = await wavePortalContract.wave();
		console.log('Mining...', waveTxn.hash);
		await waveTxn.wait();
		console.log('Mined -- ', waveTxn.hash);

		count = await wavePortalContract.getTotalWaves();
		console.log('Retreived total wave count ...', count.toNumber());
		setCountWaves(count.toNumber());
	};

	// This runs when the page loads
	useEffect(() => {
		checkIfWalletIsConnected();
	}, []);

	return (
		<div className={styles.container}>
			<Head>
				<title>Just share</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div className={styles.dataContainer}>
				<div className={styles.title}>Namaste üôè</div>
				<br />
				<div className={styles.header}>Welcome to Web3!</div>

				<div className={styles.bio}>
					Just share something here. Maybe your favorite quote? song?
					poem? book? Whatever you share here will be stored on the
					blockchain!
				</div>
				<div className={styles.bio}>
					Blockchain applications requires you to authenticate by
					signing in with your Crypto wallet. (You can sign up for one
					at Metamask)
				</div>

				<input
					className={styles.TextField}
					placeholder="Enter your message here"
				></input>
				<div className={styles.grid}>
					<button className={styles.waveButton} onClick={wave}>
						Wave at Me
					</button>
					<button
						className={styles.connectWallet}
						onClick={connectWallet}
					>
						Connect Wallet
					</button>
				</div>
				<div className={styles.card}>Total waves: {countWaves}</div>
			</div>
		</div>
	);
}
